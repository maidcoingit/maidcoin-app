/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { INurseRaid, INurseRaidInterface } from "../INurseRaid";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "numerator",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "ChangeMaidEfficacy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "entranceFee",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "nursePart",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxRewardCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    name: "Create",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "contract IMaids",
        name: "maids",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maidId",
        type: "uint256",
      },
    ],
    name: "Enter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Exit",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "checkDone",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cloneNurses",
    outputs: [
      {
        internalType: "contract ICloneNurses",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "entranceFee",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "nursePart",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "maxRewardCount",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "duration",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "endBlock",
        type: "uint256[]",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "contract IMaids",
        name: "maids",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maidId",
        type: "uint256",
      },
    ],
    name: "enter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "contract IMaids",
        name: "maids",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maidId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v1",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r1",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s1",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v2",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r2",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s2",
        type: "bytes32",
      },
    ],
    name: "enterWithPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "contract IMaids",
        name: "maids",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maidId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v1",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r1",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s1",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v2",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r2",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s2",
        type: "bytes32",
      },
    ],
    name: "enterWithPermitAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMaids",
        name: "maids",
        type: "address",
      },
    ],
    name: "isMaidsApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maidCafe",
    outputs: [
      {
        internalType: "contract IMaidCafe",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maidCoin",
    outputs: [
      {
        internalType: "contract IMaidCoin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maidEfficacy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nursePart",
    outputs: [
      {
        internalType: "contract INursePart",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "raidCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rng",
    outputs: [
      {
        internalType: "contract IRNG",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class INurseRaid__factory {
  static readonly abi = _abi;
  static createInterface(): INurseRaidInterface {
    return new utils.Interface(_abi) as INurseRaidInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): INurseRaid {
    return new Contract(address, _abi, signerOrProvider) as INurseRaid;
  }
}
